//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.14

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "personalaccount")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub user_id: i64,
    pub login: String,
    pub music_name: String,
    pub create_date: DateTime,
    pub modifate_date: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::logins::Entity",
        from = "Column::UserId",
        to = "super::logins::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Logins,
}

impl Related<super::logins::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Logins.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
